import t from"jquery";import{c as a}from"./RemoteCalls-cb01fbef.js";class e{static CSS_CLASSES={TRIGGER:"t3js-alternative-generator-trigger",CLICK_HANDLED:"click-handled",GENERATING:"generating",AI_TOOLS_GENERATING:"t3js-ai-tools-generating"};updateHook=null;constructor(){this.initGeneratorButton()}initGeneratorButton(){const a=t(`.${e.CSS_CLASSES.TRIGGER}`).not(`.${e.CSS_CLASSES.CLICK_HANDLED}`);a.addClass(e.CSS_CLASSES.CLICK_HANDLED),a.on("click",(a=>{a.preventDefault(),a.stopPropagation(),this.triggerGeneratorButton(t(a.currentTarget))}))}async triggerGeneratorButton(r){const o=r.data("file-identifier"),S=r.data("target-language"),s=t(r.data("output-target")),i=r.data("show-target");let n=r.data("text-prompt");r.data("text-prompt-field")&&(n=t(r.data("text-prompt-field")).val()),r.prop("disabled",!0),r.addClass(e.CSS_CLASSES.GENERATING),s.prop("disabled",!0),s.addClass(e.CSS_CLASSES.AI_TOOLS_GENERATING);try{const t=await a(o,S,n);console.log("Prompt generated",t),s.val(t.alternative),s.trigger("change"),this.updateHook&&this.updateHook(s,t)}finally{r.prop("disabled",!1),r.removeClass(e.CSS_CLASSES.GENERATING),s.prop("disabled",!1),s.removeClass(e.CSS_CLASSES.AI_TOOLS_GENERATING),i&&t(i).show()}}}export{e as G};
